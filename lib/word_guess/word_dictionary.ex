defmodule WordGuess.WordDictionary do
  @moduledoc """
  Provides functionality for managing words in the Word Guess game.
  Includes word selection and difficulty categorization.
  """

  # Word definitions are now stored as tuples {word, definition}
  @easy_words [
    {"cat", "A small domesticated carnivorous mammal with soft fur."},
    {"dog",
     "A domesticated carnivorous mammal that typically has a long snout and an acute sense of smell."},
    {"run",
     "Move at a speed faster than a walk, never having both feet on the ground at the same time."},
    {"jump", "Push oneself off a surface and into the air by using the muscles in one's legs."},
    {"play",
     "Engage in activity for enjoyment and recreation rather than a serious or practical purpose."},
    {"fish",
     "A limbless cold-blooded vertebrate animal with gills and fins living wholly in water."},
    {"bird",
     "A warm-blooded egg-laying vertebrate animal distinguished by the possession of feathers."},
    {"tree", "A woody perennial plant, typically having a single stem or trunk."},
    {"book", "A written or printed work consisting of pages glued or sewn together."},
    {"sun", "The star around which the earth orbits."},
    {"moon", "The natural satellite of the earth, visible by reflected light from the sun."},
    {"star",
     "A fixed luminous point in the night sky that is a large, remote incandescent body like the sun."},
    {"ball",
     "A solid or hollow spherical or egg-shaped object that is kicked, thrown, or hit in a game."},
    {"game", "An activity that one engages in for amusement or fun."},
    {"food", "Any nutritious substance that people or animals eat or drink."},
    {"home",
     "The place where one lives permanently, especially as a member of a family or household."},
    {"car", "A road vehicle, typically with four wheels, powered by an engine."},
    {"bike", "A bicycle or motorcycle."},
    {"walk", "Move at a regular pace by lifting and setting down each foot in turn."},
    {"talk", "Speak in order to give information or express ideas or feelings."}
  ]

  @medium_words [
    {"apple",
     "The round fruit of a tree of the rose family, which typically has thin red or green skin."},
    {"beach", "A pebbly or sandy shore, especially by the sea between high and low water marks."},
    {"cloud", "A visible mass of condensed water vapor floating in the atmosphere."},
    {"dance", "Move rhythmically to music, typically following a set sequence of steps."},
    {"earth", "The planet on which we live; the world."},
    {"flame", "A hot glowing body of ignited gas that is generated by something on fire."},
    {"grape", "A berry, typically green, purple, or black, growing in clusters on a vine."},
    {"heart", "A hollow muscular organ that pumps blood through the circulatory system."},
    {"image", "A representation of the external form of a person or thing in art."},
    {"juice", "The liquid obtained from or present in fruit or vegetables."},
    {"knife",
     "An instrument composed of a blade fixed into a handle, used for cutting or as a weapon."},
    {"lemon", "A yellow, oval citrus fruit with thick skin and fragrant, acidic juice."},
    {"music",
     "Vocal or instrumental sounds combined in such a way as to produce beauty of form, harmony, and expression of emotion."},
    {"night", "The period of darkness in each twenty-four hours."},
    {"ocean",
     "A very large expanse of sea, in particular each of the main areas into which the sea is divided."},
    {"piano",
     "A large keyboard musical instrument with a wooden case enclosing a soundboard and metal strings."},
    {"queen",
     "The female ruler of an independent state, especially one who inherits the position by right of birth."},
    {"river",
     "A large natural stream of water flowing in a channel to the sea, a lake, or another such stream."},
    {"sugar",
     "A sweet crystalline substance obtained from various plants, especially sugar cane and sugar beet."},
    {"tiger",
     "A large cat with a yellowish-brown coat striped with black, native to the forests of Asia."}
  ]

  @hard_words [
    {"amazing", "Causing great surprise or wonder; astonishing."},
    {"balance",
     "An even distribution of weight enabling someone or something to remain upright and steady."},
    {"captain", "The person in command of a ship or aircraft."},
    {"diamond",
     "A precious stone consisting of a clear and colorless crystalline form of pure carbon."},
    {"element",
     "A part or aspect of something abstract, especially one that is essential or characteristic."},
    {"fantasy",
     "The faculty or activity of imagining things, especially things that are impossible or improbable."},
    {"gravity",
     "The force that attracts a body toward the center of the earth, or toward any other physical body having mass."},
    {"harmony",
     "The combination of simultaneously sounded musical notes to produce chords and chord progressions."},
    {"journey", "An act of traveling from one place to another."},
    {"kingdom", "A country, state, or territory ruled by a king or queen."},
    {"library",
     "A building or room containing collections of books, periodicals, and sometimes films and recorded music."},
    {"machine",
     "An apparatus using or applying mechanical power and having several parts, each with a definite function."},
    {"network", "A group or system of interconnected people or things."},
    {"organic", "Relating to or derived from living matter."},
    {"package", "An object or group of objects wrapped in paper or plastic, or packed in a box."},
    {"quality", "The standard of something as measured against other things of a similar kind."},
    {"rainbow",
     "An arch of colors visible in the sky, caused by the refraction and dispersion of the sun's light."},
    {"science",
     "The intellectual and practical activity encompassing the systematic study of the structure and behavior of the physical and natural world."},
    {"thunder", "The loud rumbling or crashing noise heard after a lightning flash."},
    {"volcano",
     "A mountain or hill, typically conical, having a crater or vent through which lava, rock fragments, hot vapor, and gas are or have been erupted from the earth's crust."}
  ]

  @doc """
  Returns a list of all words.
  """
  def all_words do
    (@easy_words ++ @medium_words ++ @hard_words)
    |> Enum.map(fn {word, _definition} -> word end)
  end

  @doc """
  Returns a list of words for a specific difficulty level.
  Valid difficulty levels are :easy, :medium, and :hard.
  """
  def words_by_difficulty(difficulty) do
    words_with_definitions =
      case difficulty do
        :easy -> @easy_words
        :medium -> @medium_words
        :hard -> @hard_words
        _ -> @easy_words ++ @medium_words ++ @hard_words
      end

    words_with_definitions
    |> Enum.map(fn {word, _definition} -> word end)
  end

  @doc """
  Returns a random word from all available words.
  """
  def random_word do
    all_words()
    |> Enum.random()
  end

  @doc """
  Returns a random word of the specified difficulty level.
  Valid difficulty levels are :easy, :medium, and :hard.
  """
  def random_word(difficulty) do
    difficulty
    |> words_by_difficulty()
    |> Enum.random()
  end

  @doc """
  Returns the definition for a given word.
  """
  def get_definition(word) do
    all_words_with_definitions = @easy_words ++ @medium_words ++ @hard_words

    case Enum.find(all_words_with_definitions, fn {w, _} -> w == word end) do
      {_word, definition} -> definition
      nil -> "No definition available."
    end
  end

  @doc """
  Returns a hint for the given word.
  The hint is the first letter of the word and its definition.
  """
  def get_hint(word) do
    definition = get_definition(word)
    first_letter = String.first(word)

    %{
      first_letter: first_letter,
      definition: definition
    }
  end

  @doc """
  Determines the difficulty of a word based on its length.
  - Easy: 3-4 characters
  - Medium: 5-6 characters
  - Hard: 7-8 characters

  Note: This is a general categorization. The predefined word lists
  (@easy_words, @medium_words, @hard_words) are the source of truth for
  the actual difficulty of each word.
  """
  def determine_difficulty(word) do
    easy_words = Enum.map(@easy_words, fn {w, _} -> w end)
    medium_words = Enum.map(@medium_words, fn {w, _} -> w end)
    hard_words = Enum.map(@hard_words, fn {w, _} -> w end)

    cond do
      word in easy_words ->
        :easy

      word in medium_words ->
        :medium

      word in hard_words ->
        :hard

      true ->
        # Fallback to length-based categorization for words not in predefined lists
        length = String.length(word)

        cond do
          length <= 4 -> :easy
          length <= 6 -> :medium
          length <= 8 -> :hard
          true -> :hard
        end
    end
  end
end
